name: Pipeline implementation 
run-name: Executed by ${{ github.actor }}

on: 
  push:
    branches: [ master ]

env:
  ORG: Development
  
jobs:
  job1:
    name: Validate
    runs-on: ubuntu-latest
    container: salesforce/cli:latest-rc-slim

    steps:
    - name: Check out source code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Check node version
      run: |
        node --version

    - name: Display environment variable value
      run: |
        echo "Org name (job1): $ORG"

  job2:
    needs: job1
    name: Validation
    runs-on: ubuntu-latest
    container: salesforce/cli:latest-rc-slim

    steps:
    - name: Check out source code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Job2 environment variable value
      run: |
        echo "Org name (job2): $ORG"

    - name: Login to validation org
      run: |
        echo ${{ secrets.LWRORG_SFDX_AUTH_URL }} > ./SFDX_ULWRORG_SFDX_AUTH_URLRL_STORE.txt
        sf org login sfdx-url -f ./LWRORG_SFDX_AUTH_URL.txt --alias ValidationOrg

    - name: Validating all source code
      run: sf project deploy start -x manifest/package.xml --target-org ValidationOrg --test-level RunAllTestsInOrg

    # - name: Check if there is some destructive changes
    #   run: |
    #     if [[ -f destructive/destructiveChangesPre.xml ]]; then
    #       echo "Destructives changes file exists"
    #       if [[ $(grep -q '<members>' destructive/destructiveChangesPre.xml) -eq 0 ]]; then
    #         echo "There are components to delete"
    #       else
    #         echo "There are NO component to delete"
    #       fi
    #     else
    #       echo "Destructives changes file does NOT exist"
    #     fi

    # - name: Display variables' values
    #   run: |
    #     echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
    #     echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
    #     echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
    #     echo "🖥️ The workflow is now ready to test your code on the runner."

    # - name: List files in the repository
    #   run: |
    #     ls ${{ github.workspace }}
    #     echo "🍏 This job's status is ${{ job.status }}."


    # - name: Install sgd plugin
    #   run: echo "y" | sf plugins install sfdx-git-delta
      


    # - name: Check the current branch
    #   id: current-branch-id
    #   run: |
    #     echo "CURRENT_BRANCH=`git rev-parse --abbrev-ref HEAD`" >> $GITHUB_OUTPUT
    #     CURRENT_BRANCH=`git rev-parse --abbrev-ref HEAD`
    #     if [ $CURRENT_BRANCH = "master" ]; then
    #       echo "Deploys from the branch: ${CURRENT_BRANCH} "
    #     else
    #       echo "Deploys from the current branch"
    #     fi

    # - name: Check the current branch in the next step
    #   run: |
    #     echo "The current branch: ${{ steps.current-branch-id.outputs.CURRENT_BRANCH }}"

    # - name: Check if sfdx-git-delta plugin is installed
    #   run: |
    #     git config --global --add safe.directory /__w/cicd-gethub/cicd-gethub
    #     if [ -d delta-output ]; then
    #       echo "Delta output will be stored in directory: delta-output"
    #       sf sgd source delta --generate-delta --to "HEAD" --from "HEAD~1" --output delta-output
    #     else
    #       sf sgd source delta --generate-delta --to "HEAD" --from "HEAD~1"
    #     fi
    #     ls -R delta-output

#    - name: Configure devhub org
#      run: |
#        echo ${{ secrets.DEVHUB_SFDX_URL }} > ./SFDX_URL_STORE.txt
#        sf org login sfdx-url -f ./SFDX_URL_STORE.txt -a devhub -d

#    - name: Creating a new scratch org ...
#      run: sf org create scratch -d -f config/project-scratch-def.json --duration-days 1 --alias sOrg31Jan24

#    - name: Deploying all source code to the scratch org
#      run: sf project deploy start -x manifest/package.xml --target-org sOrg31Jan24 --test-level RunAllTestsInOrg

#    - name: Deleting the scratch org
#      run: sf org delete scratch -o sOrg31Jan24 -p